knitr::opts_chunk$set(echo = TRUE)
# load and separate by semicolon
data <- read.csv("data.csv", sep=";")
head(data)
# remove enrolled
library("tidyverse")
dropout.data <- data %>% filter(Target %in% c("Dropout", "Graduate" ))
library("tidyverse")
# load and separate by semicolon
data <- read.csv("data.csv", sep=";")
head(data)
# remove enrolled
dropout.data <- data %>% filter(Target %in% c("Dropout", "Graduate" ))
head(data)
# remove enrolled
dropout.data <- data %>% filter(Target %in% c("Dropout", "Graduate" ))
{r}
# remove enrolled
dropout.data <- data %>% filter(Target %in% c("Dropout", "Graduate" ))
head(data)
dim(data)
head(data)
dim(dropout.data)
library(tree)
install.packages("tree")
library(tree)
3630 * 0.7
train <- 1:2541
test <- -train
head(data)
3630*8
3630*0.8
names(dropout.data)
tree.dropout <- tree(Target ~ ., data = dropout.data)
library(ISLR2)
head(Carseats)
skim(dropout.data)
library(skimr)
install.packages(skimr)
install.packages("skimr")
library(skimr)
skim(dropout.data)
library(skimr)
skim(dropout.data)
dplyr::glimpse(dropout.data)
head(dropout.data)
droput.data$target <- as.factor(droput.data$target)
dropout.data$target <- as.factor(dropout.data$target)
dropout.data$Target <- as.factor(dropout.data$Target)
skim(dropout.data)
tree.dropout <- tree(Target ~ ., data = dropout.data)
tree.dropout <- tree(Target ~ ., data = dropout.data)
summary(tree.dropout)
plot(tree.dropout)
plot(tree.dropout)
text(tree.carseats, pretty = 0)
plot(tree.dropout)
text(tree.dropout, pretty = 0)
names(dropout.data)
# remove enrolled
dropout.data <- data %>% filter(Target %in% c("Dropout", "Graduate" ))
names(dropout.data) <- c("Marital Status",
"Application Mode",
"Application Order",
"Course",
"Daytime Evening Attendance",
"Previous Qualification",
"Previous Qualification Grade",
"Nationality",
"Mothers Qualification",
"Fathers Qualification",
"Mothers Occupation",
"Fathers Occupation",
"Admission Grade",
"Displaced",
"Educational Special Needs",
"Debtor",
"Tuition Fees",
"Gender",
"Scholarship",
"Age At Enrollment",
"International",
"Units 1st Sem Credited",
"Units 1st Sem Enrolled",
"Units 1st Sem Evaluations",
"Units 1st Sem Approved",
"Units 1st Sem Grade",
"Units 1st Sem w/o Evaluations",
"Units 2nd Sem Credited",
"Units 2nd Sem Enrolled",
"Units 2nd Sem Evaluations",
"Units 2nd Sem Approved",
"Units 2nd Sem Grade",
"Units 2nd Sem w/o Evaluations",
)
# remove enrolled
dropout.data <- data %>% filter(Target %in% c("Dropout", "Graduate" ))
names(dropout.data) <- c("Marital Status",
"Application Mode",
"Application Order",
"Course",
"Daytime Evening Attendance",
"Previous Qualification",
"Previous Qualification Grade",
"Nationality",
"Mothers Qualification",
"Fathers Qualification",
"Mothers Occupation",
"Fathers Occupation",
"Admission Grade",
"Displaced",
"Educational Special Needs",
"Debtor",
"Tuition Fees",
"Gender",
"Scholarship",
"Age At Enrollment",
"International",
"Units 1st Sem Credited",
"Units 1st Sem Enrolled",
"Units 1st Sem Evaluations",
"Units 1st Sem Approved",
"Units 1st Sem Grade",
"Units 1st Sem w/o Evaluations",
"Units 2nd Sem Credited",
"Units 2nd Sem Enrolled",
"Units 2nd Sem Evaluations",
"Units 2nd Sem Approved",
"Units 2nd Sem Grade",
"Units 2nd Sem w/o Evaluations"
)
tree.dropout <- tree(Target ~ ., data = dropout.data)
# remove enrolled
dropout.data <- data %>% filter(Target %in% c("Dropout", "Graduate" ))
names(dropout.data) <- c("Marital Status",
"Application Mode",
"Application Order",
"Course",
"Daytime Evening Attendance",
"Previous Qualification",
"Previous Qualification Grade",
"Nationality",
"Mothers Qualification",
"Fathers Qualification",
"Mothers Occupation",
"Fathers Occupation",
"Admission Grade",
"Displaced",
"Educational Special Needs",
"Debtor",
"Tuition Fees",
"Gender",
"Scholarship",
"Age At Enrollment",
"International",
"Units 1st Sem Credited",
"Units 1st Sem Enrolled",
"Units 1st Sem Evaluations",
"Units 1st Sem Approved",
"Units 1st Sem Grade",
"Units 1st Sem w/o Evaluations",
"Units 2nd Sem Credited",
"Units 2nd Sem Enrolled",
"Units 2nd Sem Evaluations",
"Units 2nd Sem Approved",
"Units 2nd Sem Grade",
"Units 2nd Sem w/o Evaluations",
"Unemployment Rate",
"Inflation Rate",
"GDP",
"Dropout"
)
tree.dropout <- tree(Dropout ~ ., data = dropout.data)
head(dropout.data)
# load and separate by semicolon
data <- read.csv("data.csv", sep=";")
# remove enrolled
dropout.data <- data %>% filter(Target %in% c("Dropout", "Graduate" ))
names(dropout.data) <- c("Marital Status",
"Application Mode",
"Application Order",
"Course",
"Daytime Evening Attendance",
"Previous Qualification",
"Previous Qualification Grade",
"Nationality",
"Mothers Qualification",
"Fathers Qualification",
"Mothers Occupation",
"Fathers Occupation",
"Admission Grade",
"Displaced",
"Educational Special Needs",
"Debtor",
"Tuition Fees",
"Gender",
"Scholarship",
"Age At Enrollment",
"International",
"Units 1st Sem Credited",
"Units 1st Sem Enrolled",
"Units 1st Sem Evaluations",
"Units 1st Sem Approved",
"Units 1st Sem Grade",
"Units 1st Sem w/o Evaluations",
"Units 2nd Sem Credited",
"Units 2nd Sem Enrolled",
"Units 2nd Sem Evaluations",
"Units 2nd Sem Approved",
"Units 2nd Sem Grade",
"Units 2nd Sem w/o Evaluations",
"Unemployment Rate",
"Inflation Rate",
"GDP",
"Dropout"
)
dropout.data$Target <- as.factor(dropout.data$Dropout)
skim(dropout.data)
# Import library for creating tree models
library(tree)
# Split data in training and test set
train <- 1:2904
test <- -train
tree.dropout <- tree(Dropout ~ ., data = dropout.data)
head(dropout.data)
# load and separate by semicolon
data <- read.csv("data.csv", sep=";")
# remove enrolled
dropout.data <- data %>% filter(Target %in% c("Dropout", "Graduate" ))
names(dropout.data) <- c("Marital Status",
"Application Mode",
"Application Order",
"Course",
"Daytime Evening Attendance",
"Previous Qualification",
"Previous Qualification Grade",
"Nationality",
"Mothers Qualification",
"Fathers Qualification",
"Mothers Occupation",
"Fathers Occupation",
"Admission Grade",
"Displaced",
"Educational Special Needs",
"Debtor",
"Tuition Fees",
"Gender",
"Scholarship",
"Age At Enrollment",
"International",
"Units 1st Sem Credited",
"Units 1st Sem Enrolled",
"Units 1st Sem Evaluations",
"Units 1st Sem Approved",
"Units 1st Sem Grade",
"Units 1st Sem w/o Evaluations",
"Units 2nd Sem Credited",
"Units 2nd Sem Enrolled",
"Units 2nd Sem Evaluations",
"Units 2nd Sem Approved",
"Units 2nd Sem Grade",
"Units 2nd Sem w/o Evaluations",
"Unemployment Rate",
"Inflation Rate",
"GDP",
"Target"
)
head(dropout.data)
dropout.data$Target <- as.factor(dropout.data$Target)
# Split data in training and test set
train <- 1:2904
test <- -train
tree.dropout <- tree(Dropout ~ ., data = dropout.data, subset = train)
tree.dropout <- tree(Target ~ ., data = dropout.data, subset = train)
head(dropout.data)
skim(dropout.data)
# Import library for creating tree models
library(tree)
# Split data in training and test set
train <- 1:2904
test <- -train
colnames(dropout.data)
tree.dropout <- tree(Target ~ ., data = dropout.data, subset = train)
tree.dropout <- tree(Target ~ ., data = dropout.data)
# load and separate by semicolon
data <- read.csv("data.csv", sep=";")
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
# load and separate by semicolon
data <- read.csv("data.csv", sep=";")
library(skimr)
# remove enrolled
dropout.data <- data %>% filter(Target %in% c("Dropout", "Graduate" ))
names(dropout.data) <- c("Marital.Status",
"Application.Mode",
"Application.Order",
"Course",
"Daytime.Evening.Attendance",
"Previous.Qualification",
"Previous.Qualification Grade",
"Nationality",
"Mothers.Qualification",
"Fathers.Qualification",
"Mothers.Occupation",
"Fathers.Occupation",
"Admission.Grade",
"Displaced",
"Educational.Special.Needs",
"Debtor",
"Tuition.Fees",
"Gender",
"Scholarship",
"Age At Enrollment",
"International",
"Units.1st.Sem.Credited",
"Units.1st.Sem.Enrolled",
"Units.1st.Sem.Evaluations",
"Units.1st.Sem.Approved",
"Units.1st.Sem.Grade",
"Units.1st.Sem.w/o.Evaluations",
"Units.2nd.Sem.Credited",
"Units.2nd.Sem.Enrolled",
"Units.2nd.Sem.Evaluations",
"Units.2nd.Sem.Approved",
"Units.2nd.Sem.Grade",
"Units.2nd.Sem.w/o Evaluations",
"Unemployment.Rate",
"Inflation.Rate",
"GDP",
"Target"
)
dropout.data$Target <- as.factor(dropout.data$Target)
skim(dropout.data)
# Import library for creating tree models
library(tree)
# Split data in training and test set
train <- 1:2904
test <- -train
tree.dropout <- tree(Target ~ ., data = dropout.data, subset = train)
head(dropout.data)
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
# load and separate by semicolon
data <- read.csv("data.csv", sep=";")
library(skimr)
# remove enrolled
dropout.data <- data %>% filter(Target %in% c("Dropout", "Graduate" ))
dropout.data$Target <- as.factor(dropout.data$Target)
skim(dropout.data)
# Import library for creating tree models
library(tree)
# Split data in training and test set
train <- 1:2904
test <- -train
tree.dropout <- tree(Target ~ ., data = dropout.data, subset = train)
summary(tree.dropout)
plot(tree.dropout)
text(tree.dropout, pretty = 0)
tree.pred <- predict(tree.dropout, dropout.data[test,], type = "class")
table(tree.pred)
tree.pred <- predict(tree.dropout, dropout.data[test,], type = "class")
table(tree.pred,tree.dropout$Target[test])
length(tree.pred)
length(dropout$Target[test])
tree.pred <- predict(tree.dropout, dropout.data[test,], type = "class")
table(tree.pred,tree.dropout.data$Target[test])
tree.pred <- predict(tree.dropout, dropout.data[test,], type = "class")
table(tree.pred,dropout.data$Target[test])
(229+409)/726
tree.pred <- predict(tree.dropout, dropout.data[test,], type = "class")
table(tree.pred,dropout.data$Target[test])
(229+409)/726
tree.pred <- predict(tree.dropout, dropout.data[test,], type = "class")
table(tree.pred,dropout.data$Target[test])
tree.pred <- predict(tree.dropout, dropout.data[test,], type = "class")
table(tree.pred,dropout.data$Target[test])
tree.pred <- predict(tree.dropout, dropout.data[test,], type = "class")
table(tree.pred,dropout.data$Target[test])
cv.dropout <- cv.tree(tree.dropout, FUN = prune.misclass)
par(mfrow = c(1, 2))
plot(cv.dropout$size, cv.dropout$dev, type = "b")
plot(cv.dropout$k, cv.dropout$dev, type = "b")
par(mfrow = c(1, 2))
plot(cv.dropout$size, cv.dropout$dev, type = "b")
plot(cv.dropout$k, log(cv.dropout$dev), type = "b")
par(mfrow = c(1, 2))
plot(cv.dropout$size, cv.dropout$dev, type = "b")
plot(cv.dropout$k, cv.dropout$dev, type = "b")
par(mfrow = c(1, 2))
plot(cv.dropout$size, cv.dropout$dev, type = "b")
plot(log(cv.dropout$k), cv.dropout$dev, type = "b")
par(mfrow = c(1, 2))
plot(cv.dropout$size, cv.dropout$dev, type = "b")
plot(cv.dropout$k, cv.dropout$dev, type = "b")
par(mfrow = c(1, 2))
plot(cv.dropout$size, cv.dropout$dev, type = "b")
plot(sqrt(cv.dropout$k), cv.dropout$dev, type = "b")
par(mfrow = c(1, 2))
plot(cv.dropout$size, cv.dropout$dev, type = "b")
plot(cv.dropout$k, cv.dropout$dev, type = "b")
cv.dropout$k
which.min(cv.dropout$dev)
cv.dropout$dev
cv.dropout$k
cv.dropout$size
prune.dropout <- prune.misclass(tree.dropout, best = 7)
plot(prune.dropout)
text(prune.dropout, pretty = 0)
tree.pred <- predict(prune.dropout, dropout.data[test,], type = "class")
table(prune.dropout,dropout.data$Target[test])
tree.pred <- predict(prune.dropout, dropout.data[test,], type = "class")
table(tree.pred,dropout.data$Target[test])
prune.dropout <- prune.misclass(tree.dropout, best = 6)
plot(prune.dropout)
text(prune.dropout, pretty = 0)
tree.pred <- predict(prune.dropout, dropout.data[test,], type = "class")
table(tree.pred,dropout.data$Target[test])
prune.dropout <- prune.misclass(tree.dropout, best = 2)
plot(prune.dropout)
text(prune.dropout, pretty = 0)
tree.pred <- predict(prune.dropout, dropout.data[test,], type = "class")
table(tree.pred,dropout.data$Target[test])
prune.dropout <- prune.misclass(tree.dropout, best = 7)
plot(prune.dropout)
text(prune.dropout, pretty = 0)
tree.pred <- predict(prune.dropout, dropout.data[test,], type = "class")
table(tree.pred,dropout.data$Target[test])
# Import library for creating tree models
library(tree)
library(randomForest)
install.packages("randomForest")
# Import library for creating tree models
library(tree)
library(randomForest)
dim(dropout.data)
set.seed(748552025)
bag.dropout <- randomForest(Target ~ ., data = dropout.data, subset = train, mtry = 36, importance = TRUE)
bag.dropout
